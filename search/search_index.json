{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Kannan's MkDocs","text":"<p>Welcome to Kannan's MkDocs \u2014 the place where you document everything you learn, code, and fix. This serves as your personal and professional knowledge base.</p>"},{"location":"#install-setup","title":"\ud83d\ude80 Install Setup","text":"<p>Material for MkDocs is a powerful and elegant theme built on top of MkDocs, a static site generator that's perfect for project documentation.</p>"},{"location":"#installation-via-pip","title":"\ud83d\udce6 Installation via pip","text":"<p>It's recommended to use a virtual environment. Open a terminal and run:</p> <pre><code>pip install mkdocs-material\n</code></pre>"},{"location":"#creating-your-site","title":"\ud83d\udcc1 Creating Your Site","text":"<p>Once Material for MkDocs is installed, create your documentation project using the <code>mkdocs</code> CLI.</p> <p>Navigate to your project directory and run:</p> <pre><code>mkdocs new .\n</code></pre> <p>This will create the following structure:</p> <pre><code>.\n\u251c\u2500\u2500 docs/\n\u2502   \u2514\u2500\u2500 index.md\n\u2514\u2500\u2500 mkdocs.yml\n</code></pre>"},{"location":"#configuration","title":"\u2699\ufe0f Configuration","text":"<p>Update the <code>mkdocs.yml</code> configuration file to set your site name and enable the Material theme:</p> <pre><code>site_name: My site\nsite_url: https://mydomain.org/mysite\n\ntheme:\n  name: material\n</code></pre> <p>You can personalize <code>site_name</code> and <code>site_url</code> according to your needs.</p>"},{"location":"#previewing-as-you-write","title":"\ud83d\udcdd Previewing as You Write","text":"<p>MkDocs includes a live preview server that automatically refreshes the site when changes are saved.</p> <p>To start the development server, run:</p> <pre><code>mkdocs serve\n</code></pre> <p>Then open your browser and navigate to:</p> <p>http://localhost:8000</p> <p>You should see your documentation site live.</p> <p></p> <p>Happy documenting! \ud83c\udf89</p>"},{"location":"django_dump_load/","title":"Django Data Backup and Restoration Guide","text":"<p>This guide helps you back up and restore your Django project data using the <code>dumpdata</code> and <code>loaddata</code> management commands.</p>"},{"location":"django_dump_load/#navigate-to-project-root","title":"\ud83d\udcc1 Navigate to Project Root","text":"<p>Ensure you're in the root directory of your Django project (where <code>manage.py</code> is located).</p>"},{"location":"django_dump_load/#dump-data","title":"\ud83d\udd04 Dump Data","text":"<ol> <li>Configure the desired database in your <code>settings.py</code> file.</li> <li>Run the following command to export all data into a JSON file:</li> </ol> <pre><code>python manage.py dumpdata &gt; data.json\n</code></pre> <p>This will create a <code>data.json</code> file containing a backup of your current database records.</p>"},{"location":"django_dump_load/#apply-migrations-before-loading-data","title":"\u2699\ufe0f Apply Migrations Before Loading Data","text":"<p>Before restoring data into a new or reset database:</p> <ol> <li>Ensure your models are migrated:</li> </ol> <pre><code>python manage.py makemigrations\npython manage.py migrate\n</code></pre> <p>This will create the database schema and empty tables.</p>"},{"location":"django_dump_load/#remove-default-contenttypes","title":"\u274c Remove Default ContentTypes","text":"<p>When Django applies migrations, it automatically adds default <code>ContentType</code> entries. These must be removed before importing data, to avoid conflicts during <code>loaddata</code>.</p>"},{"location":"django_dump_load/#run-the-following-commands-in-the-django-shell","title":"Run the following commands in the Django shell:","text":"<pre><code>python manage.py shell\n</code></pre> <pre><code>from django.contrib.contenttypes.models import ContentType\nContentType.objects.all().delete()\nexit()\n</code></pre> <p>\u26a0\ufe0f Important: Skipping this step may cause errors related to duplicate <code>ContentType</code> entries during data loading.</p>"},{"location":"django_dump_load/#load-data","title":"\ud83d\udce5 Load Data","text":"<p>Now, import the data using:</p> <pre><code>python manage.py loaddata data.json\n</code></pre> <p>This will populate your configured database with the data from <code>data.json</code>.</p> <p>\u2757 Note: If any errors occur, ensure that the JSON format is compatible with the current database and models.</p>"},{"location":"django_dump_load/#summary","title":"\u2705 Summary","text":"Step Description <code>dumpdata</code> Export data to JSON <code>makemigrations</code>, <code>migrate</code> Set up database schema Delete <code>ContentType</code> Remove auto-created entries <code>loaddata</code> Restore data from JSON <p>Tip: Always use version control (e.g., Git) and keep a backup of your original <code>data.json</code> before performing major data or schema operations.</p>"}]}